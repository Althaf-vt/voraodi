<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VOGUE - Category Management</title>
  <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Montserrat:wght@300;400;700&family=Playfair+Display:wght@400&display=swap" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/ScrollTrigger.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="/admin/adminStyle.css">
</head>
<body>
  <!-- Include the Header (Navbar and Sidebar) -->
  <%- include('../../views/partials/admin/header') %>

  <!-- Main Content Wrapper -->
  <div class="main-content">
    <!-- Category Management Header -->
    <div class="customer-management-header">
      <div class="text-container">
        <h1 id="typewriter">Category Management</h1>
        <div class="subtitle">Organize the VOGUE Collection</div>
        <p>Curate with Elegance</p>
      </div>
    </div>

    <!-- Category List Section -->
    <div class="customer-list">
      <!-- Display Flash Messages -->
      <% if (locals.success && success.length > 0) { %>
        <div class="alert" style="color: #004d00;"><%= success %></div>
      <% } %>
      <% if (locals.error && error.length > 0) { %>
        <div class="alert" style="color: #ff4040;"><%= error %></div>
      <% } %>

      <!-- Add Category Form -->
      <div class="add-category-form-container">
        <h3>Add New Category</h3>
        <div class="subtitle">Expand the VOGUE Collection</div>
        <div id="form-messages" class="alert"></div>
        <form id="add-category-form" method="post" action="/admin/addCategory" class="horizontal-form">
          <div class="form-field">
            <label for="categoryName">Category Name</label>
            <input type="text" id="name" name="categoryName" required>
            <div id="name-error" class="error-message"></div>
          </div>
          <div class="form-field">
            <label for="description">Description</label>
            <input type="text" id="description" name="description" required>
            <div id="description-error" class="error-message"></div>
          </div>
          <button type="submit" class="submit-btn">Add Category</button>
        </form>
      </div>

      <!-- Category Table -->
      <div class="categories-table">
        <h2>Category List</h2>
        <table>
          <thead>
            <tr>
              <th>Category Name</th>
              <th>Description</th>
              <th>Offer Price</th>
              <th>Offer</th>
              <th>Status</th>
              <th>List/Unlist</th>
              <th>Edit</th>
            </tr>
          </thead>
          <tbody>
            <% cat.forEach((category, index) => { %>
              <tr>
                <td class="text-start"><%= category.name %></td>
                <td class="text-start"><%= category.description || 'No description' %></td>
                <td>
                  <% if (category.categoryOffer) { %>
                    <%= category.categoryOffer %>%
                  <% } else { %>
                    0%
                  <% } %>
                </td>
                <td class="text-start">
                  <% if (!category.categoryOffer || category.categoryOffer === 0) { %>
                    <button class="view-btn" style="width: 100px">
                      <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                    </button>
                  <% } else { %>
                    <button class="block-btn" style="width: 100px">
                      <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove Offer</a>
                    </button>
                  <% } %>
                </td>
                <!--  -->
                <td class="text-start">
                  <% if (category.isListed) { %>
                    <span class="badge rounded-pill alert-success">Listed</span>
                  <% } else { %>
                    <span class="badge rounded-pill alert-danger">Unlisted</span>
                  <% } %>
                </td>
                <!--  -->
                <td class="text-start">
                  <% if (category.isListed) { %>
                    <button class="block-btn" style="width: 80px; margin-right: 5px;">
                      <a href="/admin/listCategory?id=<%= category._id %>" style="color: #f5f5e8 !important; text-decoration: none;">Unlist</a>
                    </button>
                  <% } else { %>
                    <button class="unblock-btn" style="width: 80px; margin-right: 5px;">
                      <a href="/admin/unlistCategory?id=<%= category._id %>" style="color: #f5f5e8 !important; text-decoration: none;">List</a>
                    </button>
                  <% } %>
                </td>
                <!--  -->
                <td class="text-start">
                  <button class="unblock-btn" style="width: 100px">
                    <a href="/admin/editCategory?id=<%= category._id %>" class="text-white">Edit</a>
                  </button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Pagination -->
      <div class="pagination">
        <div class="pagination-list">
          <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>" class="page-link">« Previous</a>
          <% } %>
          <% for (let i = 1; i <= totalPages; i++) { %>
            <% if (i === currentPage) { %>
              <span class="page-item active"><a class="page-link"><%= i %></a></span>
            <% } else { %>
              <a href="?page=<%= i %>" class="page-link"><%= i %></a>
            <% } %>
          <% } %>
          <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>" class="page-link">Next »</a>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Typewriter Effect
    const text = "Category Management";
    let i = 0;
    function typeWriter() {
      if (i < text.length) {
        document.getElementById("typewriter").innerHTML = text.substring(0, i + 1);
        i++;
        setTimeout(typeWriter, 100);
      }
    }

    // Section Reveal Animations
    gsap.utils.toArray(".customer-list").forEach(section => {
      gsap.from(section, {
        opacity: 0,
        y: 30,
        duration: 1,
        scrollTrigger: {
          trigger: section,
          start: "top 80%",
          end: "bottom 20%",
          toggleActions: "play none none none"
        }
      });
    });

    // Confirm Delete
    function confirmDelete(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to delete this category?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#004d00',
        cancelButtonColor: '#ff4040',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = `/admin/deleteCategory/${categoryId}`;
        }
      });
    }

    // Form Validation
    function validateForm() {
      clearErrorMessages();
      const name = document.getElementById('name').value.trim();
      const description = document.getElementById('description').value.trim();
      let isValid = true;

      if (name === '') {
        displayErrorMessage('name-error', 'Please enter a category name');
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('name-error', 'Category name can only contain alphabetic characters and spaces');
        isValid = false;
      }

      if (description === '') {
        displayErrorMessage('description-error', 'Please enter a description');
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = 'block';
      setTimeout(() => {
        errorElement.innerText = '';
        errorElement.style.display = 'none';
      }, 3000); // Clear error after 3 seconds
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((element) => {
        element.innerText = '';
        element.style.display = 'none';
      });
    }

    // Clear Message Div
    function clearMessageDiv() {
      const messageDiv = document.getElementById('form-messages');
      messageDiv.textContent = '';
      messageDiv.style.opacity = '0';
    }

    // Handle Add Category Form Submission via AJAX
    document.getElementById('add-category-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      console.log('Form submission triggered');
      if (!validateForm()) return;

      const formData = {
        categoryName: e.target.categoryName.value,
        description: e.target.description.value
      };
      const messageDiv = document.getElementById('form-messages');

      try {
        const response = await fetch('/admin/addCategory', {
          method: 'POST',
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(formData)
        });
        console.log(response);
        const data = await response.json();

        if (response.ok) {
          messageDiv.style.color = '#004d00';
          messageDiv.textContent = data.message;
          messageDiv.style.opacity = '1';
          e.target.reset();
          setTimeout(clearMessageDiv, 3000); // Clear message after 3 seconds
          setTimeout(() => {
            window.location.reload();
          }, 1500); // Reload after 1.5 seconds
        } else {
          messageDiv.style.color = '#ff4040';
          messageDiv.textContent = data.error;
          messageDiv.style.opacity = '1';
          setTimeout(clearMessageDiv, 3000); // Clear message after 3 seconds
        }
      } catch (error) {
        console.error('Form submission error:', error);
        messageDiv.style.color = '#ff4040';
        messageDiv.textContent = 'Failed to add category';
        messageDiv.style.opacity = '1';
        setTimeout(clearMessageDiv, 3000); // Clear message after 3 seconds
      }
    });

    // Initialize
    window.onload = function() {
      console.log('Page loaded, initializing event listeners');
      typeWriter();
    };

    // Add Offer
    async function addOffer(categoryId) {
      const { value: amount } = await Swal.fire({
        title: 'Offer in percentage',
        input: 'number',
        inputLabel: 'Percentage',
        inputPlaceholder: '%',
      });
      // Passing the entered amount to backend
      if (amount) {
        try {
          const response = await fetch('/admin/addCategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              percentage: amount,
              categoryId: categoryId,
            }),
          });

          // Accessing returned backend data
          const data = await response.json();

          if (response.ok && data.status === true) {
            Swal.fire(
              'Offer added',
              'The offer has been added',
              'success'
            ).then(() => {
              location.reload();
            });
          } else {
            Swal.fire('Failed', data.message || 'Adding offer failed', 'error');
          }
        } catch (error) {
          Swal.fire(
            'Error',
            'An error occurred while adding the offer',
            'error'
          );
          console.error('Error adding offer:', error);
        }
      }
    }

    // Remove Offer
    async function removeOffer(categoryId) {
      try {
        const response = await fetch('/admin/removeCategoryOffer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            categoryId: categoryId,
          })
        });

        // Accessing returned backend data
        const data = await response.json();

        if (response.ok && data.status === true) {
          Swal.fire(
            'Offer removed',
            'The offer has been removed',
            'success'
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire('Failed', data.message || 'Removing offer failed', 'error');
        }
      } catch (error) {
        Swal.fire(
          'Error',
          'An error occurred while removing the offer',
          'error'
        );
        console.error('Error removing offer:', error);
      }
    }
  </script>
</body>
</html>