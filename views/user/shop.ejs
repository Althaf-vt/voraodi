<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Page</title>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel&family=Montserrat&family=Playfair+Display&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/user/shopStyle.css">
    <link rel="stylesheet" href="/user/headerStyle.css" />
    <link rel="stylesheet" href="/user/footerStyle.css" />
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <%
    const queryParams = new URLSearchParams();

    if (typeof searchQuery !== 'undefined' && searchQuery) queryParams.set('query', searchQuery);
    if (Array.isArray(selectedCategories) && selectedCategories.length) queryParams.set('category', selectedCategories.join(','));
    if (typeof sortBy !== 'undefined' && sortBy) queryParams.set('sort', sortBy);
    if (Array.isArray(selectedPriceFilters) && selectedPriceFilters.length) queryParams.set('priceFilter', selectedPriceFilters[0]); // assuming single select

    const paginationBaseRoute = `/shop?${queryParams.toString()}&`;
    %>

    
    <div class="main-container">
        <div class="page-header breadcrumb-wrap">
      <div class="container">
        <div class="breadcrumb">
          <a class="b1" href="/" rel="nofollow">Home</a>
          <span></span> <a class="b2" href="/shop" style="text-decoration: none;">Shop</a>
        </div>
      </div>
    </div>
        <section class="shop-page container">
            <div class="shop-topbar">
                <div class="search-bar">
                    <form id="searchForm" action="/shop" method="GET" class="search-form">
                        <input id="searchInput" type="text" name="query" placeholder="Search items..." class="search-input"  value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>" required>
                        <button type="submit" class="search-button">Search</button>
                        <button type="button" class="clear-button" onclick="clearSearch()">Clear</button>
                    </form>
                </div>
            </div>
            <div class="product-list-container">
                <aside class="sidebar">
                    <div class="sidebar-refresh-icon">
                        <button class="refresh-button" onclick="clearFilters()" title="Clear All Filters">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </div>

                    <!--  CATEGORY FILTER-->
                    <div class="filter-section">
                    <div class="filter-title" onclick="toggleSection(this)">
                        Categories <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="filter-options" style="display: block;">
                        <% for (let i = 0; i < category.length; i++) { %>
                        <label class="filter-label">
                            <input 
                            type="checkbox" 
                            name="category" 
                            value="<%= category[i]._id %>" 
                            <%= selectedCategories.includes(category[i]._id.toString()) ? 'checked' : '' %>
                            />
                            <%= category[i].name %>
                        </label>
                        <% } %>
                    </div>
                    </div>

                   <!--  SORT FILTER -->
                    <div class="price-filter">
                    <div class="filter-title" onclick="toggleSection(this)">
                        Sort Products <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="filter-options" style="display: block;">
                        <% const sortOptions = [
                        { label: 'Low-High', value: 'priceLowHigh' },
                        { label: 'High-Low', value: 'priceHighLow' },
                        { label: 'A-Z', value: 'nameAZ' },
                        { label: 'Z-A', value: 'nameZA' }
                        ]; %>

                        <% sortOptions.forEach(opt => { %>
                        <label class="filter-label">
                            <input 
                            type="radio" 
                            name="sort" 
                            value="<%= opt.value %>" 
                            <%= sortBy === opt.value ? 'checked' : '' %>
                            />

                            <%= opt.label %>
                        </label>
                        <% }); %>
                    </div>
                    </div>


                    <!--  PRICE RANGE FILTER -->
                    <div class="price-filter">
                    <div class="filter-title" onclick="toggleSection(this)">
                        Filter by Price <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="filter-options" style="display: block;">
                        <% const priceRanges = ['under500', '500to1000', '1000to1500', 'above1500']; %>
                        <% const priceLabels = ['Under ₹500', '₹500 - ₹1000', '₹1000 - ₹1500', 'Above ₹1500']; %>

                        <% for (let i = 0; i < priceRanges.length; i++) { %>
                        <label class="filter-label">
                            <input 
                            type="radio" 
                            name="priceFilter" 
                            value="<%= priceRanges[i] %>" 
                            <%= selectedPriceFilters.includes(priceRanges[i]) ? 'checked' : '' %>
                            />
                            <%= priceLabels[i] %>
                        </label>
                        <% } %>
                    </div>
                    </div>
                    <div style="text-align:center; margin-top: 20px;">
                        <button class="apply-filter-btn" onclick="applyFilters()">Apply Filter</button>
                    </div>

                </aside>

                <div class="product-section">
                    <div class="product-grid-container">
                        <main class="product-grid">
                            <% if (products.length === 0) { %>
                                <div class="no-products">No products available.</div>
                            <% } else { %>
                                <% for(let i = 0; i < products.length; i ++) {%>
                                    <div class="product-card">
                                        <span class="wishlist-btn" onclick="addToWishlist('<%= products[i]._id %>')">♡</span>
                                        <a href="/productDetails/<%= products[i]._id %>" style="text-decoration: none;">
                                            <img src="<%= products[i].productImage[0]%>" alt="<%= products[i].productName %>">
                                            <h4><%= products[i].productName %></h4>
                                            <p>₹<%=products[i].salePrice.toLocaleString('en-IN')%></p>
                                            <% if (products[i].regularPrice > products[i].salePrice) { %>
                                                <p><span style="color: rgb(219, 75, 9);" class="text-muted"><strike>₹<%=products[i].regularPrice.toLocaleString('en-IN')%></strike></span></p>
                                            <% } else{%>
                                                <p><span class="text-muted"><br></span></p>
                                            <% } %>
                                        </a>
                                        <button class="quick-view-btn" onclick="openQuickViewModal('<%= products[i]._id %>')">
                                            <i class="fas fa-eye"></i> Quick View
                                        </button>
                                    </div>
                                <% } %>
                            <% } %>
                        </main>
                    </div>
                    
                    <div class="pagination">
                        <% if (currentPage > 1) { %>
                            <a class="btn" href="<%= paginationBaseRoute %>page=<%= currentPage - 1 %>">Prev</a>   
                        <% } %>

                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <a class="btn <%= currentPage === i ? 'active' : '' %>"
                                href="<%= paginationBaseRoute %>page=<%= i %>"><%= i %>
                            </a>
                        <% } %>

                        <% if (currentPage < totalPages) { %>
                            <a class="btn" href="<%= paginationBaseRoute %>page=<%= currentPage + 1 %>">Next</a>
                        <% } %>
                    </div>
                </div> 
                <!-- Quick View Modal -->
                <div id="quickViewModal" class="quick-view-modal">
                <div class="quick-view-content">
                    <span class="close-modal" onclick="closeQuickViewModal()">×</span>
                    <div id="quickViewDetails">
                    <!-- Content will be dynamically injected -->
                    </div>
                </div>
                </div>  
            </div>
        </section>
    </div>

    <script>
        // Toast
        async function toastMessage(data, type) {
            const message = data?.message ?? (type ? "Something went wrong" : "Updated successfully");

            Toastify({
                text: message,
                duration: 1500,
                close: true,
                gravity: "top",
                position: "right",
                stopOnFocus: true,
                style: {
                    background: type === "error" ? "#dc3545" : "#28a745",
                    borderRadius: "10px",
                    padding: "10px 20px",
                    fontWeight: "500",
                }
            }).showToast();
        }

        function addToWishlist(productId) {
            fetch(`/addToWishlist?`,{
                method: "POST",
                headers:{
                    'Content-Type':'application/json'
                },
                body: JSON.stringify({productId})
            })
            .then(res => res.json())
            .then(data => {
                if(data.success){
                    toastMessage(data);
                }else{
                    toastMessage(data,'error');
                }
            })
            .catch(err =>{
                Swal.fire({
                    title: '<svg xmlns="http://www.w3.org/2000/svg" height="40px" viewBox="0 -960 960 960" width="40px" fill="#EA3323"><path d="M624-528.67q23.33 0 39.67-16.33Q680-561.33 680-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q568-608 568-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33Zm-288 0q23.33 0 39.67-16.33Q392-561.33 392-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q280-608 280-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33ZM480.12-418q-67.45 0-122.29 37.83Q303-342.33 277.33-280h57.34q22-40.33 60.95-62.83 38.94-22.5 84.83-22.5 45.88 0 84.38 22.83 38.5 22.83 61.17 62.5h56.67q-25-63-80.05-100.5T480.12-418ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 333.33q139.58 0 236.46-96.87 96.87-96.88 96.87-236.46t-96.87-236.46Q619.58-813.33 480-813.33t-236.46 96.87Q146.67-619.58 146.67-480t96.87 236.46q96.88 96.87 236.46 96.87Z"/></svg>',
                    text: 'Something went wrong. Please try again later.',
                    icon: '',
                    timer: 1500,
                    showConfirmButton: false
                })
            })
        }

        function openQuickViewModal(productId) {
            fetch(`/quickView?id=${productId}`)
                .then(res => res.json())
                .then(product => {
                    const modal = document.getElementById('quickViewModal');
                    const content = document.getElementById('quickViewDetails');

                    content.innerHTML = `
                        <h2>${product.productName}</h2>
                        <img src="${product.productImage[0]}" alt="${product.productName}" class="quick-view-img" />
                        <p>${product.description}</p>
                        <p>Price: ₹${product.salePrice.toLocaleString('en-IN')}</p>
                        <div class="modal-buttons">
                            <a href="/productDetails/${product._id}" class="modal-btn view-details">View Details</a>
                            <button class="modal-btn close-btn" onclick="closeQuickViewModal()">Continue Shopping</button>
                        </div>
                    `;

                    modal.style.display = 'block';
                })
                .catch(err => {
                    console.error('Quick View Error:', err);
                });
        }

        function closeQuickViewModal() {
            document.getElementById('quickViewModal').style.display = 'none';
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
    <%- include("../../views/partials/user/footer") %>
</body>
</html>
<script>
// // Search Form Submit
  document.getElementById('searchForm').addEventListener('submit', function (e) {
  e.preventDefault();

  const search = document.getElementById('searchInput')?.value.trim();
  const params = new URLSearchParams(window.location.search);

  params.set('page', 1);

  //  CATEGORY (multi-select)
  const categories = [...document.querySelectorAll('input[name="category"]:checked')].map(cb => cb.value);   
  if (categories.length > 0) {
    params.set('category', categories.join(','));
  } else {
    params.delete('category');
  }

  // SORT
  const sort = document.querySelector('input[name="sort"]:checked')?.value;
  if (sort) {
    params.set('sort', sort);
  } else {
    params.delete('sort');
  }

  // PRICE
  const price = document.querySelector('input[name="priceFilter"]:checked')?.value;
  if (price) {
    params.set('priceFilter', price);
  } else {
    params.delete('priceFilter');
  }

  //  SEARCH 
  if (search) {
    params.set('query', search);
  } else {
    params.delete('query');
  }

  const basePath = '/shop';
  window.location.href = `${basePath}?${params.toString()}`;
});

  // AJAX Pagination
  document.addEventListener('click', function (e) {
    const isPaginationBtn = e.target.classList.contains('btn') && e.target.closest('.pagination');
    if (isPaginationBtn) {
      e.preventDefault();

      const url = e.target.href;

      fetch(url)
        .then(res => res.text())
        .then(html => {
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, 'text/html');

          const newGrid = doc.querySelector('.product-grid-container');
          const newPagination = doc.querySelector('.pagination');
          const newSearchInput = doc.querySelector('#searchInput');

          document.querySelector('.product-grid-container').innerHTML = newGrid.innerHTML;
          document.querySelector('.pagination').innerHTML = newPagination.innerHTML;

          if (newSearchInput) {
            document.getElementById('searchInput').value = newSearchInput.value;
          }

          // Corrected line to maintain sorting in URL
          history.pushState({}, '', url);
        })
        .catch(err => {
          console.error('Pagination Error:', err);
          alert('An error occurred while loading the page. Please try again.');
        });
    }
});

  // Clear Search
  function clearSearch() {
    const queryParams = new URLSearchParams(window.location.search);
    queryParams.delete('query');
    const basePath = window.location.pathname;
    const route = `${basePath}?${queryParams.toString() || 'page=1'}`;
    document.getElementById('searchInput').value = "";

    fetch(route)
      .then(res => res.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');

        const newGrid = doc.querySelector('.product-grid-container');
        const newPagination = doc.querySelector('.pagination');

        document.querySelector('.product-grid-container').innerHTML = newGrid.innerHTML;
        document.querySelector('.pagination').innerHTML = newPagination.innerHTML;
        history.pushState({}, '', route);
      })
      .catch(err => {
        console.error('Clear Search Error:', err);
      });
  }

  // Clear Filter
  function clearFilters() {
    const queryParams = new URLSearchParams(window.location.search);
    const searchInputValue = document.getElementById('searchInput').value.trim();

    ['category', 'sort', 'gt', 'lt', 'query'].forEach(param => {
        queryParams.delete(param);
    });

    if (searchInputValue) {
        queryParams.set('query', searchInputValue);
    }

    const basePath = '/shop';
    const route = `${basePath}?${queryParams.toString() || 'page=1'}`;

    fetch(route)
      .then(res => res.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');

        const newGrid = doc.querySelector('.product-grid-container');
        const newPagination = doc.querySelector('.pagination');

        if (newGrid && newPagination) {
          document.querySelector('.product-grid-container').innerHTML = newGrid.innerHTML;
          document.querySelector('.pagination').innerHTML = newPagination.innerHTML;
        }

        document.getElementById('searchInput').value = searchInputValue;
        history.pushState({}, '', route);
      })
      .catch(err => {
        console.error('Clear Filter Error:', err);
        alert('Could not clear filters. Try again.');
      });
}

function applyFilters() {
    const search = document.getElementById('searchInput')?.value.trim();
    const params = new URLSearchParams(window.location.search);

    params.set('page', 1);

    // CATEGORY (multi-select)
    const categories = [...document.querySelectorAll('input[name="category"]:checked')]
                        .map(cb => cb.value);   
    if (categories.length > 0) {
        params.set('category', categories.join(','));
    } else {
        params.delete('category');
    }
    // SORT name
    const sort = document.querySelector('input[name="sort"]:checked')?.value;
    if (sort) {
        params.set('sort', sort);
    } else {
        params.delete('sort');
    }

    // PRICE sort
    const price = document.querySelector('input[name="priceFilter"]:checked')?.value;
    if (price) {
        params.set('priceFilter', price);
    } else {
        params.delete('priceFilter');
    }

    //  SEARCH 
    if (search) {
        params.set('query', search);
    }

    const basePath = '/shop';
    window.location.href = `${basePath}?${params.toString()}`;
}

function toggleSection(element) {
  const options = element.nextElementSibling;
  const icon = element.querySelector('i');

  if (options.style.display === 'none') {
    options.style.display = 'block';
    icon.classList.remove('fa-chevron-right');
    icon.classList.add('fa-chevron-down');
  } else {
    options.style.display = 'none';
    icon.classList.remove('fa-chevron-down');
    icon.classList.add('fa-chevron-right');
  }
}



</script>