<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VOGUE - Order Details</title>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Montserrat:wght@300;400;700&family=Playfair+Display:wght@400&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoA6DQDk6gkQ1p7t27nLKW1Zr4pqb1zF+Gkz+0dJG8GkEk0" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/ScrollTrigger.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/user/orderDetailsStyle.css">
    <link rel="stylesheet" href="/user/headerStyle.css">
    <link rel="stylesheet" href="/user/footerStyle.css">
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <div class="message-container" id="messageContainer">
    <% if(message) %><%= message %>
</div>

    <div class="order-details-container">
        <!-- Sidebar: Amazon/Flipkart-inspired compact navigation -->
        <div class="sidebar">
            <button class="sidebar-toggle">☰ Menu</button>
            <h2 class="sidebar-title">My Account</h2>
            <ul class="sidebar-nav">
                <li><a href="/userProfile">Profile</a></li>
                <li><a href="/userAddress">Address</a></li>
                <li><a href="/orders" class="active">Orders</a></li>
                <li><a href="/cart">Cart</a></li>
                <li><a href="/wishlist">Wishlist</a></li>
                <li><a href="/wallet">Wallet</a></li>
                <li><a href="/coupons">Coupons</a></li>
                <li><a href="/referrals">Referrals</a></li>
                <li><a href="/logout">Logout</a></li>
            </ul>
        </div>

        <!-- Order Details Content -->
        <div class="order-details-content">
            <div class="order-details-header">
                <h1 class="order-details-title">Order Details</h1>
                <p class="order-details-subtitle"><strong>Order ID :</strong> <%= order.orderId %> <br> <strong>Placed on :</strong> <%= new Date(order.createdOn).toLocaleDateString() %></p>
            </div>

            <!-- Order Tracking: Amazon/Flipkart-inspired simple design -->
<div class="tracking-section">
    <h2 class="section-title"><strong>Order Tracking</strong></h2>
    <div class="tracking-bar" style="--progress: <%= 
        order.status === 'Ordered' ? 25 : 
        order.status === 'Confirmed' ? 25 : 
        order.status === 'Shipped' ? 50 : 
        order.status === 'Out for Delivery' ? 75 : 
        order.status === 'Delivered' ? 100 : 
        order.status === 'Cancelled' ? 0 : 0 %>">
        
        <% if (order.status === 'Cancelled') { %>
            <!-- Show cancelled flow -->
            <div class="tracking-step completed" data-status="Ordered">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Ordered</span>
            </div>
            <div class="tracking-step cancelled" data-status="Cancelled">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Cancelled</span>
            </div>
        <% } else if (order.status === 'Return Request' || order.status === 'Returned') { %>
            <!-- Show return flow -->
            <div class="tracking-step completed" data-status="Ordered">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Ordered</span>
            </div>
            <div class="tracking-step completed" data-status="Delivered">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Delivered</span>
            </div>
            <div class="tracking-step <%= order.status === 'Return Request' ? 'active' : 'completed' %>" data-status="Return Request">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Return Request</span>
            </div>
            <% if (order.status === 'Returned') { %>
                <div class="tracking-step completed" data-status="Returned">
                    <div class="tracking-icon"></div>
                    <span class="tracking-label">Returned</span>
                </div>
            <% } %>
        <% } else { %>
            <!-- Show normal flow -->
            <div class="tracking-step <%= order.status === 'Ordered' ? 'active' : 'completed' %>" data-status="Ordered">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Ordered</span>
            </div>
            <div class="tracking-step <%= order.status === 'Confirmed' ? 'active' : (order.status === 'Ordered' ? '' : 'completed') %>" data-status="Confirmed">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Confirmed</span>
            </div>
            <div class="tracking-step <%= order.status === 'Shipped' ? 'active' : (order.status === 'Ordered' || order.status === 'Confirmed' ? '' : 'completed') %>" data-status="Shipped">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Shipped</span>
            </div>
            <div class="tracking-step <%= order.status === 'Out for Delivery' ? 'active' : (order.status === 'Delivered' ? 'completed' : '') %>" data-status="Out for Delivery">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Out for Delivery</span>
            </div>
            <div class="tracking-step <%= order.status === 'Delivered' ? 'active' : '' %>" data-status="Delivered">
                <div class="tracking-icon"></div>
                <span class="tracking-label">Delivered</span>
            </div>
        <% } %>
    </div>
</div>

            <!-- Order Info: Details and Address -->
            <div class="order-info">
                <div class="order-info-left">
                    <h2 class="section-title"><strong>Order Information</strong></h2>
                    <div class="detail-item">
                        <span class="detail-label">Order Number:</span>
                        <span class="detail-value"><%= order.orderId %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Date:</span>
                        <span class="detail-value"><%= new Date(order.createdAt).toLocaleDateString() %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Total:</span>
                        <span class="detail-value">₹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Payment Method:</span>
                        <span class="detail-value"><%= order.paymentMethod%></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Status:</span>
                        <span class="detail-value" style="color: #006400; font-weight: 700;"><%= order.status %></span>
                    </div>
                </div>
                <div class="order-info-right">
                    <h2 class="section-title"><strong>Delivery Address</strong></h2>
                    <div class="detail-item">
                        <span class="detail-label">Name:</span>
                        <span class="detail-value"><%= order.address.name %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Address:</span>
                        <span class="detail-value">
                            <%= order.address.street %>,<br>
                            <%= order.address.city %>, <%= order.address.state %><br>
                            <%= order.address.country %> - <%= order.address.pincode %>
                        </span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Phone:</span>
                        <span class="detail-value"><%= order.address.phone %></span>
                    </div>
                    <% if (order.address.altPhone) { %>
                        <div class="detail-item">
                            <span class="detail-label">Alt. Phone:</span>
                            <span class="detail-value"><%= order.address.altPhone %></span>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Ordered Items -->
            <div class="ordered-items">
                <h2 class="section-title"><strong>Ordered Items</strong></h2>

                <table class="ordered-items-table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Size</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.orderedItems.forEach(item => { %>
                            <tr class="order-item-row" data-sku="<%= item.sku %>">
                                <!-- Product image and name -->
                                <td class="product-cell">
                                    <div class="product-info">
                                        <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="item-image">
                                        <span><%= item.product.productName %></span>
                                    </div>
                                </td>

                                <!-- Size -->
                                <td><%= item.size %></td>

                                <!-- Quantity -->
                                <td><%= item.quantity %></td>

                                <!-- Unit Price -->
                                <td>₹<%= item.product.salePrice.toFixed(2) %></td>
                                <!-- Total Price -->
                                <td>₹<%= (item.product.salePrice * item.quantity).toFixed(2) %></td>

                                <!-- Status -->
                                <td>
                                    <% if (item.status === 'Cancelled') { %>
                                        Cancelled
                                    <% } else if(item.returnStatus === 'Return Request' || item.returnStatus === 'Returned' || item.returnStatus === 'Rejected'){ %>
                                        <%= item.returnStatus %>
                                    <% } else{%>
                                        <%= item.status %>
                                        <% } %>
                                </td>

                                <!-- Action -->
                                <td>
                                    <% if (item.status !== 'Cancelled' && item.status !== 'Delivered' && order.status !== 'Cancelled' && order.status !== 'Delivered' && item.status !== 'Return Request' && item.returnStatus !== 'Returned' && item.returnStatus !== 'Rejected' && item.returnStatus !== 'Requested') { %>
                                        <button 
                                            class="cancel-item-button" 
                                            onclick="cancelItem('<%= order.orderId %>', '<%= item.sku %>')">
                                            Cancel Item
                                        </button>
                                    <% } else { %>
                                        <% if (item.status === 'Delivered') {%>
                                        <button 
                                            class="cancel-item-button" 
                                            onclick="returnItem('<%= order.orderId %>', '<%= item.sku %>')">
                                            Return Item
                                        </button>
                                        <% } %>
                                           
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <a href="/invoice?id=<%= order.orderId%>" class="btn btn-primary">Invoice</a>
                <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && order.status !== 'Return Request' && order.status !== 'Returned' && order.returnStatus !== 'Rejected') { %>
                    <button 
                        class="cancel-order-form btn btn-secondary" 
                        onclick="cancelOrder('<%= order.orderId%>')">
                        Cancel Order
                    </button>
                <% }else{ %>
                    <% if(order.status !== 'Cancelled' && order.status === 'Delivered' && order.status !== 'Return Request'  && order.returnStatus !== 'Rejected' && order.returnStatus !== 'Returned') {%>
                    <button 
                        class="cancel-order-form btn btn-secondary" 
                        onclick="returnOrder('<%= order.orderId%>')">
                        Return Order
                    </button>
                    <% } %>
                <% } %>
                <a href="/orders" class="btn btn-secondary">Back to Orders</a>
            </div>
        </div>
    </div>
<!-- Return Modal -->
<div class="modal-overlay" id="returnModal">
    <div class="return-modal">
        <div class="modal-header">
            <h3 class="modal-title">Return Item</h3>
            <button class="modal-close" onclick="closeReturnModal()">&times;</button>
        </div>
        <form id="returnForm">
            <div class="form-group">
                <label class="form-label" for="returnReason">Reason for Return:</label>
                <select class="form-select" id="returnReason" name="returnReason" onchange="toggleOtherReason()">
                    <option value="">Select a reason</option>
                    <option value="defective">Defective Product</option>
                    <option value="wrong_size">Wrong Size</option>
                    <option value="not_as_described">Not as Described</option>
                    <option value="damaged">Damaged During Shipping</option>
                    <option value="quality_issues">Quality Issues</option>
                    <option value="other">Other</option>
                </select>
            </div>
            <div class="form-group hidden" id="otherReasonGroup">
                <label class="form-label" for="otherReason">Please specify:</label>
                <textarea class="form-input" id="otherReason" name="otherReason" placeholder="Please describe your reason for return..."></textarea>
            </div>
            <div class="modal-actions">
                <button type="button" class="btn-modal btn-modal-secondary" onclick="closeReturnModal()">Cancel</button>
                <button type="submit" class="btn-modal btn-modal-primary">Submit Return</button>
            </div>
        </form>
    </div>
</div>

<!-- Return Order -->
<div class="modal-overlay" id="returnModal">
    <div class="return-modal">
        <div class="modal-header">
            <h3 class="modal-title">Return Order</h3>
            <button class="modal-close" onclick="closeReturnModal()">&times;</button>
        </div>
        <form id="returnForm">
            <div class="form-group">
                <label class="form-label" for="returnReason">Reason for Return:</label>
                <select class="form-select" id="returnReason" name="returnReason" onchange="toggleOtherReason()">
                    <option value="">Select a reason</option>
                    <option value="defective">Defective Product</option>
                    <option value="wrong_size">Wrong Size</option>
                    <option value="not_as_described">Not as Described</option>
                    <option value="damaged">Damaged During Shipping</option>
                    <option value="quality_issues">Quality Issues</option>
                    <option value="other">Other</option>
                </select>
            </div>
            <div class="form-group hidden" id="otherReasonGroup">
                <label class="form-label" for="otherReason">Please specify:</label>
                <textarea class="form-input" id="otherReason" name="otherReason" placeholder="Please describe your reason for return..."></textarea>
            </div>
            <div class="modal-actions">
                <button type="button" class="btn-modal btn-modal-secondary" onclick="closeReturnModal()">Cancel</button>
                <button type="submit" class="btn-modal btn-modal-primary">Submit Return</button>
            </div>
        </form>
    </div>
</div>
    <%- include('../../views/partials/user/footer') %>

    
</body>
</html>
<script>
    //cancel item 
    async function cancelItem(orderId, sku) {
    Swal.fire({
        toast: true,
        title: 'Are you sure?',
        text: "Do you want to cancel this item?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/cancel-item', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, sku })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    // Find and remove the item DOM element using SKU
                    const button = document.querySelector(`button[onclick*="${sku}"]`);
                    if (button) {
                        const itemDiv = button.closest('.order-item');
                        if (itemDiv) itemDiv.remove();
                    }

                    Swal.fire({
                        toast: true,
                        icon: 'success',
                        title: 'Cancelled!',
                        text: 'The item has been cancelled successfully.',
                        timer: 1500,
                        showConfirmButton: false
                    }),location.reload();
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(err => {
                console.error('Cancel Item Error:', err);
                Swal.fire({
                    toast: true,
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong while cancelling the item.'
                });
            });
        }
    });
}

async function cancelOrder(orderId){
    Swal.fire({
        toast: true,
        title: 'Are you sure?',
        text: "Do you want to cancel this Order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/cancel-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({orderId})
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        toast: true,
                        icon: 'success',
                        title: 'Cancelled!',
                        text: 'The Order has been cancelled successfully.',
                        timer: 1500,
                        showConfirmButton: false
                    }),location.reload();
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(err => {
                console.error('Cancel Order Error:', err);
                Swal.fire({
                    toast: true,
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong while cancelling the Order.'
                });
            });
        }
    });
}

// Variables to store current return context
let currentReturnOrderId = null;
let currentReturnSku = null;
let isOrderReturn = false;

// Updated returnItem function
async function returnItem(orderId, sku) {
    isOrderReturn = false;
    currentReturnOrderId = orderId;
    currentReturnSku = sku;
    document.getElementById('returnModal').classList.add('active');
    document.body.style.overflow = 'hidden'; // Prevent background scrolling
}

async function returnOrder(orderId){
    isOrderReturn = true;
    currentReturnOrderId = orderId;
    currentReturnSku = null;
    document.getElementById('returnModal').classList.add('active');
    document.body.style.overflow = 'hidden'; // Prevent background scrolling
}

// Function to close modal
function closeReturnModal() {
    document.getElementById('returnModal').classList.remove('active');
    document.body.style.overflow = 'auto'; // Restore scrolling
    document.getElementById('returnForm').reset();
    document.getElementById('otherReasonGroup').classList.add('hidden');
    currentReturnOrderId = null;
    currentReturnSku = null;
}

// Function to toggle other reason input
function toggleOtherReason() {
    const reasonSelect = document.getElementById('returnReason');
    const otherReasonGroup = document.getElementById('otherReasonGroup');
    
    if (reasonSelect.value === 'other') {
        otherReasonGroup.classList.remove('hidden');
    } else {
        otherReasonGroup.classList.add('hidden');
    }
}

// Handle form submission
document.getElementById('returnForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const reasonSelect = document.getElementById('returnReason');
    const otherReason = document.getElementById('otherReason');
    
    if (!reasonSelect.value) {
        Swal.fire({
            toast: true,
            icon: 'error',
            title: 'Error',
            text: 'Please select a reason for return.'
        }); 
        return;
    }
    
    if (reasonSelect.value === 'other' && !otherReason.value.trim()) {
        Swal.fire({
            toast: true,
            icon: 'error',
            title: 'Error',
            text: 'Please specify your reason for return.'
        });
        return;
    }
    
    const returnData = {
        orderId: currentReturnOrderId,
        reason: reasonSelect.value === 'other' ? otherReason.value.trim() : reasonSelect.options[reasonSelect.selectedIndex].text
    }
    if(!isOrderReturn){
        returnData.sku = currentReturnSku
    }

    const url = isOrderReturn ? '/return-order':'/return-item'
    
    // Send return request
    fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(returnData)
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            toast(data)
            closeReturnModal();
            
        } else {
           Swal.fire({
                toast: true,
                icon: '',
                title: '<svg xmlns="http://www.w3.org/2000/svg" height="40px" viewBox="0 -960 960 960" width="40px" fill="#EA3323"><path d="M624-528.67q23.33 0 39.67-16.33Q680-561.33 680-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q568-608 568-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33Zm-288 0q23.33 0 39.67-16.33Q392-561.33 392-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q280-608 280-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33ZM480.12-418q-67.45 0-122.29 37.83Q303-342.33 277.33-280h57.34q22-40.33 60.95-62.83 38.94-22.5 84.83-22.5 45.88 0 84.38 22.83 38.5 22.83 61.17 62.5h56.67q-25-63-80.05-100.5T480.12-418ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 333.33q139.58 0 236.46-96.87 96.87-96.88 96.87-236.46t-96.87-236.46Q619.58-813.33 480-813.33t-236.46 96.87Q146.67-619.58 146.67-480t96.87 236.46q96.88 96.87 236.46 96.87Z"/></svg>',
                text: data.message||'Something went wrong , Please try again later.'
            });
        }
    })
    .catch(err => {
        console.error('Return Error:', err);
        Swal.fire({
            toast: true,
            icon: '',
            title: '<svg xmlns="http://www.w3.org/2000/svg" height="40px" viewBox="0 -960 960 960" width="40px" fill="#EA3323"><path d="M624-528.67q23.33 0 39.67-16.33Q680-561.33 680-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q568-608 568-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33Zm-288 0q23.33 0 39.67-16.33Q392-561.33 392-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q280-608 280-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33ZM480.12-418q-67.45 0-122.29 37.83Q303-342.33 277.33-280h57.34q22-40.33 60.95-62.83 38.94-22.5 84.83-22.5 45.88 0 84.38 22.83 38.5 22.83 61.17 62.5h56.67q-25-63-80.05-100.5T480.12-418ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 333.33q139.58 0 236.46-96.87 96.87-96.88 96.87-236.46t-96.87-236.46Q619.58-813.33 480-813.33t-236.46 96.87Q146.67-619.58 146.67-480t96.87 236.46q96.88 96.87 236.46 96.87Z"/></svg>',
            text:'Something went wrong , Please try again later.'
        });
    });
});

// Close modal when clicking outside
document.getElementById('returnModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeReturnModal();
    }
});


// Show message notification
function showMessage(message, type = 'error', duration = 5000) {
    const container = document.getElementById('messageContainer');
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `message-notification ${type}`;
    messageDiv.innerHTML = `
        <div class="message-header">
            <h4 class="message-title">${type.charAt(0).toUpperCase() + type.slice(1)}</h4>
            <button class="message-close" onclick="closeMessage(this)">&times;</button>
        </div>
        <p class="message-text">${message}</p>
    `;
    
    container.appendChild(messageDiv);
    
    // Trigger show animation
    setTimeout(() => {
        messageDiv.classList.add('show');
    }, 10);
    
    // Auto remove after duration
    setTimeout(() => {
        closeMessage(messageDiv.querySelector('.message-close'));
    }, duration);
}

// Close message notification
function closeMessage(button) {
    const messageDiv = button.closest('.message-notification');
    messageDiv.classList.remove('show');
    setTimeout(() => {
        messageDiv.remove();
    }, 300);
}




function showMessage(message, type = 'error', duration = 3000) {
    const container = document.getElementById('messageContainer');
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `message-notification ${type}`;
    messageDiv.innerHTML = `
        <div class="message-header">
            <h4 class="message-title">${type.charAt(0).toUpperCase() + type.slice(1)}</h4>
            <button class="message-close" onclick="closeMessage(this)">&times;</button>
        </div>
        <p class="message-text">${message}</p>
    `;
    
    container.appendChild(messageDiv);
    
    // Trigger show animation
    setTimeout(() => {
        messageDiv.classList.add('show');
    }, 10);
    
    // Auto remove after duration
    setTimeout(() => {
        closeMessage(messageDiv.querySelector('.message-close'));
    }, duration);
}

// Close message notification
function closeMessage(button) {
    const messageDiv = button.closest('.message-notification');
    messageDiv.classList.remove('show');
    setTimeout(() => {
        messageDiv.remove();
    }, 300);
}

// Usage examples:
// showMessage('Order cancelled successfully!', 'success');
// showMessage('Something went wrong!', 'error');
// showMessage('Please check your details', 'warning');
// showMessage('Your order is being processed', 'info');
</script>