<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VORAODI - My Wishlist</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap" rel="stylesheet">    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/ScrollTrigger.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/user/wishlist.css">
    <link rel="stylesheet" href="/user/footerStyle.css">
    <script src="https://unpkg.com/lucide@latest"></script>
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <div class="wishlist-container">
        <div class="wishlist-content">
            <div class="wishlist-header">
                <div class="profile-section">
                    <img src="<%= user.image %>" alt="Profile" class="profile-image">
                    <div class="profile-text">
                        <h1>MY WISHLIST</h1>
                        <% if (wishlistItems && wishlistItems.length > 0) { %>
                            <p><%= wishlistItems.length %> <%= wishlistItems.length === 1 ? 'item' : 'items' %> saved</p>
                        <% } else { %>
                            <p>Your saved items will appear here</p>
                        <% } %>
                    </div>
                </div>
                <a href="/shop" class="continue-shopping-btn">
                    <i data-lucide="shopping-bag" class="btn-icon"></i>
                    Continue Shopping
                </a>
            </div>

            <% if (wishlistItems && wishlistItems.length > 0) { %>
                <div class="wishlist-items-container">
                    <div class="wishlist-items-header">
                        <span class="header-product">Product</span>
                        <span class="header-price">Price</span>
                        <span class="header-action">Action</span>
                    </div>
                    
                    <div class="wishlist-items">
                        <% wishlistItems.forEach(item => { %>
                            <% if (item.productId) { %>
                                <div class="wishlist-item" 
                                    data-item-id="<%= item.id %>" 
                                    data-product-id="<%= item.productId._id %>" 
                                    data-variants='<%- JSON.stringify(item.productId.variants) %>'>
                                    
                                    <div class="item-product">
                                        <div class="wishlist-item-image">
                                            <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" />
                                        </div>
                                        <div class="wishlist-item-details">
                                            <h3 class="wishlist-item-name"><%= item.productId.productName %></h3>
                                            <p class="wishlist-item-category"><%= item.productId.categoryId?.categoryName || 'Fashion' %></p>
                                            <div class="item-mobile-price">
                                                <span class="current-price">₹<%= item.productId.salePrice %></span>
                                                <% if (item.productId.regularPrice > item.productId.salePrice) { %>
                                                    <span class="original-price">₹<%= item.productId.regularPrice %></span>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="item-price">
                                        <span class="current-price">₹<%= item.productId.salePrice %></span>
                                        <% if (item.productId.regularPrice > item.productId.salePrice) { %>
                                            <span class="original-price">₹<%= item.productId.regularPrice %></span>
                                            <span class="discount-badge">
                                                <%= Math.round(((item.productId.regularPrice - item.productId.salePrice) / item.productId.regularPrice) * 100) %>% OFF
                                            </span>
                                        <% } %>
                                    </div>
                                    
                                    <div class="item-actions">
                                        <button class="action-btn quick-view-btn" onclick="window.location.href='/productDetails/<%= item.productId._id %>'">
                                            <i data-lucide="eye" class="action-icon"></i>
                                        </button>
                                        <button class="action-btn add-to-cart-btn" onclick="addToCart('<%= item.productId._id %>')">
                                            <i data-lucide="shopping-cart" class="action-icon"></i>
                                        </button>
                                        <button class="action-btn remove-btn" onclick="removeFromWishlist('<%= item.id %>')">
                                            <i data-lucide="trash-2" class="action-icon"></i>
                                        </button>
                                    </div>
                                </div>
                            <% } %>
                        <% }) %>
                    </div>
                </div>
            <% } else { %>
                <div class="empty-wishlist">
                    <div class="empty-wishlist-icon">
                        <i data-lucide="heart" class="heart-icon"></i>
                    </div>
                    <h2>Your Wishlist is Empty</h2>
                    <p>Save your favorite items to your wishlist and shop them later!</p>
                    <a href="/shop" class="continue-shopping-btn">
                        <i data-lucide="shopping-bag" class="btn-icon"></i>
                        Continue Shopping
                    </a>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Variant modal -->
    <div class="size-modal-overlay" id="sizeModalOverlay">
        <div class="size-modal">
            <div class="size-modal-header">
                <h3>Select Size</h3>
                <button class="close-modal" onclick="closeSizeModal()">×</button>
            </div>
            <div class="size-modal-content">
                <div class="product-info">
                    <img id="modalProductImage" src="" alt="">
                    <div class="product-details">
                        <h4 id="modalProductName"></h4>
                        <p id="modalProductPrice"></p>
                    </div>
                </div>
                <div class="size-options">
                    <div class="size-grid">
                        <button class="size-btn" data-size="XS">XS</button>
                        <button class="size-btn" data-size="S">S</button>
                        <button class="size-btn" data-size="M">M</button>
                        <button class="size-btn" data-size="L">L</button>
                        <button class="size-btn" data-size="XL">XL</button>
                        <button class="size-btn" data-size="XXL">XXL</button>
                    </div>
                </div>
            </div>
            <div class="size-modal-footer">
                <button class="confirm-add-to-cart" onclick="confirmAddToCart()">Add to Cart</button>
            </div>
        </div>
    </div>

    <!-- Loading Modal -->
    <div class="loading-modal-overlay" id="loadingModal">
        <div class="loading-modal">
            <div class="loading-spinner"></div>
            <h3>Adding to Cart</h3>
            <p>Checking stock....</p>
        </div>
    </div>

    <%- include('../../views/partials/user/footer') %>

    <script>
        lucide.createIcons();
        
        // Placeholder functions for button actions
        async function removeFromWishlist(productId) {
            const confirmResult = await Swal.fire({
                toast: true,
                title: 'Remove Item?',
                text: 'Are you sure you want to remove this item from your wishlist?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes'
            });
            if(confirmResult.isConfirmed){
                fetch('/wishlist-remove-item',{
                    method: "PATCH",
                    headers: {
                        'Content-Type':'application/json'
                    },
                    body: JSON.stringify({productId})
                })
                .then(res => res.json())
                .then((data => {
                    if(data.success){
                        toast(data);
                    }else{
                        toast(data,'Error');
                    }
                }))
                .catch(err => {
                    console.log("Error :",err);
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: '',
                        text: 'Something went wrong. Please try again later',
                    });
                })
                // Add your remove functionality here
            }
        }

        function quickView(productId) {
            console.log('Quick view:', productId);
            // Add your quick view functionality here
        }

        // Show loading modal
        function showLoadingModal() {
            document.getElementById('loadingModal').classList.add('active');
        }

        // Hide loading modal
        function hideLoadingModal() {
            document.getElementById('loadingModal').classList.remove('active');
        }

        // variant modal 
        let currentProductId = null;
        let selectedSize = null;

        function addToCart(productId) {
            currentProductId = productId;

            const btn = document.querySelector(`.add-to-cart-btn[onclick="addToCart('${productId}')"]`);
            const itemRow = document.querySelector(`.wishlist-item[data-product-id="${currentProductId}"]`);
            
            const productImage = itemRow.querySelector('.wishlist-item-image img').src;
            const productName = itemRow.querySelector('.wishlist-item-name').textContent;
            const productPrice = itemRow.querySelector('.current-price').textContent;
            
            const variants = JSON.parse(itemRow.dataset.variants);

            // Populate modal with product info
            document.getElementById('modalProductImage').src = productImage;
            document.getElementById('modalProductName').textContent = productName;
            document.getElementById('modalProductPrice').textContent = productPrice;

            // Generate size buttons dynamically based on available quantity
            const sizeGrid = document.querySelector('.size-grid');
            sizeGrid.innerHTML = ''; // Clear old buttons

            const availableVariants = variants.filter(variant => variant.quantity > 0);

            if (availableVariants.length === 0) {
                sizeGrid.innerHTML = '<p class="no-sizes-msg">No sizes available</p>';
            } else {
                availableVariants.forEach(variant => {
                    const button = document.createElement('button');
                    button.classList.add('size-btn');
                    button.dataset.size = variant.size;
                    button.textContent = variant.size;
                    sizeGrid.appendChild(button);
                });
            }

            // Reset selection
            selectedSize = null;
            updateConfirmButton();

            // Show modal
            document.getElementById('sizeModalOverlay').classList.add('active');
        }

        function closeSizeModal() {
            document.getElementById('sizeModalOverlay').classList.remove('active');
            // currentProductId = null;
            // selectedSize = null;
        }

        // Handle size selection
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('size-btn')) {
                // Remove selected class from all buttons
                document.querySelectorAll('.size-btn').forEach(btn => {
                    btn.classList.remove('selected');
                });
                
                // Add selected class to clicked button
                e.target.classList.add('selected');
                selectedSize = e.target.dataset.size;
                
                // Update confirm button state
                updateConfirmButton();
            }
        });

        function updateConfirmButton() {
            const confirmBtn = document.querySelector('.confirm-add-to-cart');
            if (selectedSize) {
                confirmBtn.disabled = false;
            } else {
                confirmBtn.disabled = true;
            }
        }

        async function confirmAddToCart() {
            if (!selectedSize || !currentProductId) return;

            const itemRow = document.querySelector(`.wishlist-item[data-product-id="${currentProductId}"]`);

            const variants = JSON.parse(itemRow.dataset.variants);
            const selectedVariant = variants.find(v => v.size === selectedSize);

            if (!selectedVariant) {
                Swal.fire({
                    toast: true,
                    icon: 'error',
                    title: 'Size Error',
                    text: 'Selected size is invalid.',
                    confirmButtonColor: '#d4af37'
                });
                return;
            }

            // // Close size modal first
            closeSizeModal();
            
            // Show loading modal
            showLoadingModal();

            try {
                // Add 2 second delay before making API calls
                await new Promise(resolve => setTimeout(resolve, 2000));

                const checkRes = await fetch('/check-qty', {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: currentProductId,
                        size: selectedSize
                    })
                });

                const checkData = await checkRes.json();

                if (checkData.success) {
                    const response = await fetch('/wishlist/addTocart', {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            productId: currentProductId,
                            size: selectedSize
                        })
                    });
                    
                    const data = await response.json();
                    
                    // Hide loading modal
                    hideLoadingModal();
                    
                    if (data.success) {
                        closeSizeModal()
                        toast(data);
                    } else {
                        closeSizeModal()
                        toast(data, 'error');
                    }
                } else {
                    closeSizeModal()
                    // Hide loading modal
                    hideLoadingModal();
                    toast(checkData);
                }
            } catch (error) {
                closeSizeModal()
                console.error('Error adding to cart:', error);
                // Hide loading modal
                hideLoadingModal();
                Swal.fire('Error', 'Something went wrong. Please try again later', 'error');
            }
        }

        // Close modal when clicking outside
        document.getElementById('sizeModalOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                closeSizeModal();
            }
        });
    </script>
</body>
</html>