<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VORAODI - Shopping Cart</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/ScrollTrigger.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/user/cartStyle.css">
    <link rel="stylesheet" href="/user/footerStyle.css">
    <script src="https://unpkg.com/lucide@latest"></script>
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <div class="cart-container">
        <div class="cart-content">
            <div class="cart-header">
                <div class="profile-section">
                    <img src="<%= user.image %>" alt="Profile" class="profile-image">
                    <div class="profile-text">
                        <h1>MY SHOPPING CART</h1>
                        <% if (cartItems && cartItems.length > 0) { %>
                            <p><%= cartItems.length %> <%= cartItems.length === 1 ? 'item' : 'items' %> in your cart</p>
                        <% } else { %>
                            <p>Your cart is currently empty</p>
                        <% } %>
                    </div>
                </div>
                <a href="/shop" class="continue-shopping-btn">
                    <i data-lucide="shopping-bag" class="btn-icon"></i>
                    Continue Shopping
                </a>
            </div>

            <div class="cart-main">
                <% if (cartItems && cartItems.length > 0) { %>
                    <div class="cart-items-container">
                        <div class="cart-items-header">
                            <span class="header-product">Product</span>
                            <span class="header-price">Price</span>
                            <span class="header-size">Size</span>
                            <span class="header-quantity">Quantity</span>
                            <span class="header-total">Total</span>
                            <span class="header-action">Action</span>
                        </div>
                        
                        <div class="cart-items">
                            <% cartItems.forEach(item => { %>
                                <% if (item.productId) { %>
                                    <div class="cart-item">
                                        <div class="item-product">
                                            <div class="cart-item-image">
                                                <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" />
                                            </div>
                                            <div class="cart-item-details">
                                                <h3 class="cart-item-name"><%= item.productId.productName %></h3>
                                                <!-- <p class="cart-item-category"><%#= item.productId.category?.name || 'Fashion' %></p> -->
                                                <div class="item-mobile-price">
                                                    <span class="current-price">₹<%= item.productId.salePrice %></span>
                                                    <% if (item.productId.regularPrice > item.productId.salePrice) { %>
                                                        <span class="original-price">₹<%= item.productId.regularPrice %></span>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="item-price">
                                            <span class="current-price">₹<%= item.productId.salePrice %></span>
                                            <% if (item.productId.regularPrice > item.productId.salePrice) { %>
                                                <span class="original-price">₹<%= item.productId.regularPrice %></span>
                                            <% } %>
                                        </div>
                                        
                                        <div class="item-size">
                                            <span><%= item.size %></span>
                                        </div>
                                        
                                        <div class="item-quantity">
                                            <div class="quantity-controls">
                                                <button class="quantity-button decrease" data-id="<%= item.id %>">
                                                    <i data-lucide="minus" class="quantity-icon"></i>
                                                </button>
                                                <span class="quantity-value"><%= item.quantity %></span>
                                                <button class="quantity-button increase" data-id="<%= item.id %>">
                                                    <i data-lucide="plus" class="quantity-icon"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <div class="item-total">
                                            <span>₹<%= item.productId.salePrice * item.quantity %></span>
                                        </div>
                                        
                                        <div class="item-action">
                                            <button onclick="removeItem('<%= item.id %>')" class="remove-button">
                                                <i data-lucide="trash-2" class="action-icon"></i>
                                            </button>
                                        </div>
                                    </div>
                                <% } %>
                            <% }) %>
                        </div>
                    </div>

                    <div class="cart-summary">
                        <div class="summary-header">
                            <h3>Order Summary</h3>
                        </div>
                        <div class="summary-details">
                            <div class="summary-item">
                                <span>Subtotal</span>
                                <span>₹<%= cartItems
                                    .filter(item => item.productId)
                                    .reduce((total, item) => total + (item.productId.salePrice * item.quantity), 0)
                                    %>
                                </span>
                            </div>
                            <div class="summary-item">
                                <span>Shipping</span>
                                <span>Calculated at checkout</span>
                            </div>
                            <div class="summary-item total">
                                <span>Total</span>
                                <span>₹<%= cartItems
                                    .filter(item => item.productId)
                                    .reduce((total, item) => total + (item.productId.salePrice * item.quantity), 0)
                                    %>
                                </span>
                            </div>
                        </div>
                        <button onclick="checkout()" class="checkout-button">
                            <i data-lucide="credit-card" class="btn-icon"></i>
                            Proceed to Checkout
                        </button>
                    </div>
                <% } else { %>
                    <div class="empty-cart">
                        <div class="empty-cart-icon">
                            <i data-lucide="shopping-cart" class="cart-icon"></i>
                        </div>
                        <h2>Your Cart is Empty</h2>
                        <p>Looks like you haven't added anything to your cart yet</p>
                        <a href="/shop" class="continue-shopping-btn">
                            <i data-lucide="shopping-bag" class="btn-icon"></i>
                            Continue Shopping
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <div class="loading-text">Checking Stock...</div>
        </div>
    </div>

    <%- include('../../views/partials/user/footer') %>

    <script>
        lucide.createIcons();
        
        async function removeItem(itemId) {
            const confirmResult = await Swal.fire({
                toast: true,
                title: 'Remove Item?',
                text: 'Are you sure you want to remove this item from your cart?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!'
            });

            if (confirmResult.isConfirmed) {
                try {
                    const response = await fetch(`/cart/remove-item?id=${itemId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        Swal.fire({
                            toast: true,
                            title: 'Removed!',
                            text: 'Item has been removed from your cart.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire('Failed', 'Could not remove item. Please try again.', 'error');
                    }
                } catch (error) {
                    console.error('Error removing item:', error);
                    Swal.fire('Error', 'Something went wrong.', 'error');
                }
            }
        }
            
            // Quantity Controls
            document.querySelectorAll('.quantity-button').forEach(button => {
                button.addEventListener('click', async (e) => {
                    const id = e.target.closest('button').dataset.id;
                    const action = e.target.closest('button').classList.contains('increase') ? 'increase' : 'decrease';
                    const row = e.target.closest('.cart-item');
                    const quantitySpan = row.querySelector('.quantity-value');
                    let currentQuantity = parseInt(quantitySpan.textContent);

                    if (action === 'decrease' && currentQuantity <= 1) {
                        return;
                    }

                    try {
                        const response = await fetch(`/cart/update-quantity?id=${id}&action=${action}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();
                        if (response.ok) {
                            // Get quantity span and total cell
                            const quantitySpan = row.querySelector('.quantity-value');
                            const priceText = row.querySelector('.item-price .current-price').textContent.replace('₹', '');
                            const totalCell = row.querySelector('.item-total span');

                            let quantity = parseInt(quantitySpan.textContent);
                            const unitPrice = parseFloat(priceText);

                            if (action === 'increase') {
                                quantity += 1;
                            } else {
                                quantity -= 1;
                            }

                            if(quantity > 0) {
                                quantitySpan.textContent = quantity;
                                totalCell.textContent = '₹' + (unitPrice * quantity).toFixed(2);
                            }

                            // Update cart summary
                            updateCartSummary();
                        } else {
                           Swal.fire({
                            title: '<svg xmlns="http://www.w3.org/2000/svg" height="40px" viewBox="0 -960 960 960" width="40px" fill="#EA3323"><path d="M624-528.67q23.33 0 39.67-16.33Q680-561.33 680-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q568-608 568-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33Zm-288 0q23.33 0 39.67-16.33Q392-561.33 392-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q280-608 280-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33ZM480.12-418q-67.45 0-122.29 37.83Q303-342.33 277.33-280h57.34q22-40.33 60.95-62.83 38.94-22.5 84.83-22.5 45.88 0 84.38 22.83 38.5 22.83 61.17 62.5h56.67q-25-63-80.05-100.5T480.12-418ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 333.33q139.58 0 236.46-96.87 96.87-96.88 96.87-236.46t-96.87-236.46Q619.58-813.33 480-813.33t-236.46 96.87Q146.67-619.58 146.67-480t96.87 236.46q96.88 96.87 236.46 96.87Z"/></svg>',
                            text: data.message||'Stock ',
                            icon: '',
                            timer: 1500,
                            showConfirmButton: false
                         })
                        }
                    } catch (error) {
                        console.error('Error updating quantity:', error);
                        alert('An error occurred while updating the quantity');
                    }
                });
            });

        function updateCartSummary() {
            let subtotal = 0;
            document.querySelectorAll('.cart-item').forEach(row => {
                const price = parseFloat(row.querySelector('.item-price .current-price').textContent.replace('₹', ''));
                const quantity = parseInt(row.querySelector('.quantity-value').textContent);
                subtotal += price * quantity;
            });

            document.querySelectorAll('.summary-item.total span:last-child, .summary-item:first-child span:last-child').forEach(el => {
                el.textContent = '₹' + subtotal.toFixed(2);
            });

            // Optional: show "Cart is Empty" if no items left
            if (document.querySelectorAll('.cart-item').length === 0) {
                document.querySelector('.cart-main').innerHTML = `
                    <div class="empty-cart">
                        <div class="empty-cart-icon">
                            <i data-lucide="shopping-cart" class="cart-icon"></i>
                        </div>
                        <h2>Your Cart is Empty</h2>
                        <p>Looks like you haven't added anything to your cart yet</p>
                        <a href="/shop" class="continue-shopping-btn">
                            <i data-lucide="shopping-bag" class="btn-icon"></i>
                            Continue Shopping
                        </a>
                    </div>
                `;
                lucide.createIcons();
            }
        }

        //checkout
        async function checkout() {
            // Show loading
            const loadingOverlay = document.getElementById('loadingOverlay');
            loadingOverlay.classList.add('active');
            
            // Start timer for minimum 2 seconds
            const startTime = Date.now();
            
            try {
                // Check stock availability
                const response = await fetch('/cart/check-stock', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();
                
                // Calculate remaining time to ensure 2 seconds minimum
                const elapsedTime = Date.now() - startTime;
                const remainingTime = Math.max(0, 2000 - elapsedTime);
                
                // Wait for remaining time if needed
                if (remainingTime > 0) {
                    await new Promise(resolve => setTimeout(resolve, remainingTime));
                }
                
                loadingOverlay.classList.remove('active');
                
                if (response.ok && data.stockAvailable) {
                    window.location.href = '/checkout';
                } else {
                    Swal.fire({
                        title: '<svg xmlns="http://www.w3.org/2000/svg" height="30px" viewBox="0 -960 960 960" width="30px" fill="#EA3323"><path d="M624-528.67q23.33 0 39.67-16.33Q680-561.33 680-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q568-608 568-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33Zm-288 0q23.33 0 39.67-16.33Q392-561.33 392-584.67q0-23.33-16.33-39.66-16.34-16.34-39.67-16.34-23.33 0-39.67 16.34Q280-608 280-584.67q0 23.34 16.33 39.67 16.34 16.33 39.67 16.33ZM480.12-418q-67.45 0-122.29 37.83Q303-342.33 277.33-280h57.34q22-40.33 60.95-62.83 38.94-22.5 84.83-22.5 45.88 0 84.38 22.83 38.5 22.83 61.17 62.5h56.67q-25-63-80.05-100.5T480.12-418ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-400Zm0 333.33q139.58 0 236.46-96.87 96.87-96.88 96.87-236.46t-96.87-236.46Q619.58-813.33 480-813.33t-236.46 96.87Q146.67-619.58 146.67-480t96.87 236.46q96.88 96.87 236.46 96.87Z"/></svg>',
                        text: data.message || 'Some items are out of stock. Please update your cart.',
                        icon: '',
                        timer: 3000,
                        showConfirmButton: false,
                        customClass: {
                            popup: 'compact-swal-popup',
                            title: 'compact-swal-title',
                            content: 'compact-swal-content'
                        }
                    });
                }
            } catch (error) {
                // Calculate remaining time for error case too
                const elapsedTime = Date.now() - startTime;
                const remainingTime = Math.max(0, 2000 - elapsedTime);
                
                if (remainingTime > 0) {
                    await new Promise(resolve => setTimeout(resolve, remainingTime));
                }
                
                loadingOverlay.classList.remove('active');
                
                console.error('Error checking stock:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'Something went wrong. Please try again.',
                    icon: 'error',
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        }
    </script>
</body>
</html>